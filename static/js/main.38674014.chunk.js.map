{"version":3,"sources":["components/Section/Section.js","components/Notification/Notification.js","components/Feedback/Feedback.js","components/Statistic/Statistic.js","App/App.js","index.js","components/Feedback/feedback.module.css"],"names":["Section","title","children","className","styles","section","Notification","massage","notification","Feedback","options","onLeaveFeedback","el","style","list","map","option","item","onClick","Statistic","bad","neutral","good","total","positivePercentage","protoTypes","PropTypes","arrayOf","string","array","App","state","feedbackGood","setState","prevState","feedbackNeutral","feedbackBad","totalFeedback","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uSAGO,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC/B,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACE,oBAAIF,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,K,oBCJA,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAC7B,OAAO,mBAAGJ,UAAWC,IAAOI,aAArB,SAAoCD,I,oCCDtC,SAASE,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC9BC,GAAM,EACV,OACE,oBAAIT,UAAWU,IAAMC,KAArB,SACGJ,EAAQK,KAAI,SAACC,GACZ,OACE,oBAAiBb,UAAWU,IAAMI,KAAlC,SACE,wBAAQC,QAASP,EAAiBC,GAAM,GAAxC,SAA8CI,KADvCA,QCPZ,SAASG,EAAT,GAAuE,IAAlDC,EAAiD,EAAjDA,IAAKC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACrD,OACE,8BACE,+BACE,uCAAUF,KACV,0CAAaD,KACb,sCAASD,KACT,wCAAWG,KACX,qDAAwBC,EAAxB,aDQRf,EAASgB,WAAa,CACpBf,QAASgB,IAAUC,QAAQD,IAAUE,QACrCjB,gBAAiBe,IAAUG,O,IEbvBC,E,4MACJC,MAAQ,CACNT,KAAM,EACND,QAAS,EACTD,IAAK,G,EAGPY,aAAe,WACb,EAAKC,UAAS,SAACC,GAEb,MAAO,CACLZ,KAFe,EAAKS,MAAdT,KAEO,O,EAInBa,gBAAkB,WAChB,EAAKF,UAAS,SAACC,GAEb,MAAO,CACLb,QAFkB,EAAKU,MAAjBV,QAEa,O,EAIzBe,YAAc,WACZ,EAAKH,UAAS,SAACC,GAEb,MAAO,CACLd,IAFc,EAAKW,MAAbX,IAEK,O,EAIjBiB,cAAgB,WACd,MAA+B,EAAKN,MAEpC,OAFA,EAAQT,KAAR,EAAcD,QAAd,EAAuBD,K,EAIzBI,mBAAqB,WACnB,IAAQF,EAAS,EAAKS,MAAdT,KAER,OAD2BgB,KAAKC,MAAO,IAAMjB,EAAQ,EAAKe,kB,4CAG5D,WACE,MAA+BG,KAAKT,MAA5BT,EAAR,EAAQA,KAAMD,EAAd,EAAcA,QAASD,EAAvB,EAAuBA,IAErBiB,EAKEG,KALFH,cACAb,EAIEgB,KAJFhB,mBACAQ,EAGEQ,KAHFR,aACAG,EAEEK,KAFFL,gBACAC,EACEI,KADFJ,YAEF,OACE,qBAAKjC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAACH,EAAD,CAASC,MAAO,6BAAhB,SACE,cAACQ,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB,CAACqB,EAAcG,EAAiBC,OAGpDI,KAAKH,gBAAkB,EACtB,cAACrC,EAAD,CAASC,MAAO,aAAhB,SACE,cAACkB,EAAD,CACEG,KAAMA,EACND,QAASA,EACTD,IAAKA,EACLG,MAAOc,IACPb,mBAAoBA,QAIxB,cAAClB,EAAD,CAAcC,QAAS,+B,GAtEjBkC,aA8EHX,IChFfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,sCCR1BC,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,yB","file":"static/js/main.38674014.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport styles from \"./section.module.css\";\n\nexport function Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      <h2 className={styles.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element,\n};\n","import PropTypes from \"prop-types\";\nimport styles from \"./notification.module.css\";\n\nexport function Notification({ massage }) {\n  return <p className={styles.notification}>{massage}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import PropTypes from \"prop-types\";\nimport style from \"./feedback.module.css\";\n\nexport function Feedback({ options, onLeaveFeedback }) {\n  let el = -1;\n  return (\n    <ul className={style.list}>\n      {options.map((option) => {\n        return (\n          <li key={option} className={style.item}>\n            <button onClick={onLeaveFeedback[(el += 1)]}>{option}</button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nFeedback.protoTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.array,\n};\n","import PropTypes from \"prop-types\";\n\nexport function Statistic({ bad, neutral, good, total, positivePercentage }) {\n  return (\n    <div>\n      <ul>\n        <li>Good:{good}</li>\n        <li>Neutral:{neutral}</li>\n        <li>Bad:{bad}</li>\n        <li>Total:{total}</li>\n        <li>PositivePercentage:{positivePercentage} %</li>\n      </ul>\n    </div>\n  );\n}\n\nStatistic.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { Section } from \"../components/Section/Section\";\nimport { Notification } from \"../components/Notification/Notification\";\nimport { Feedback } from \"../components/Feedback/Feedback\";\nimport { Statistic } from \"../components/Statistic/Statistic\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  feedbackGood = () => {\n    this.setState((prevState) => {\n      const { good } = this.state;\n      return {\n        good: good + 1,\n      };\n    });\n  };\n  feedbackNeutral = () => {\n    this.setState((prevState) => {\n      const { neutral } = this.state;\n      return {\n        neutral: neutral + 1,\n      };\n    });\n  };\n  feedbackBad = () => {\n    this.setState((prevState) => {\n      const { bad } = this.state;\n      return {\n        bad: bad + 1,\n      };\n    });\n  };\n  totalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n  positivePercentage = () => {\n    const { good } = this.state;\n    const positivePercentage = Math.round((100 * good) / this.totalFeedback());\n    return positivePercentage;\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const {\n      totalFeedback,\n      positivePercentage,\n      feedbackGood,\n      feedbackNeutral,\n      feedbackBad,\n    } = this;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Section title={\"Please leave your feedback\"}>\n            <Feedback\n              options={[\"Good\", \"Neutral\", \"Bad\"]}\n              onLeaveFeedback={[feedbackGood, feedbackNeutral, feedbackBad]}\n            />\n          </Section>\n          {this.totalFeedback() > 0 ? (\n            <Section title={\"Statistics\"}>\n              <Statistic\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={totalFeedback()}\n                positivePercentage={positivePercentage()}\n              />\n            </Section>\n          ) : (\n            <Notification massage={\"No feedback given\"} />\n          )}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"feedback_list__70ptW\",\"item\":\"feedback_item__2QxjN\"};"],"sourceRoot":""}